{"version":3,"sources":["firebase.js","helpers.js","components/Draw.js","components/SideComment.js","components/Sidepanel.js","components/Reply.js","components/PopupComment.js","components/Filter.js","components/Leaflet.js","components/Login.js","App.js","serviceWorker.js","index.js"],"names":["firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","getRelationshipText","live","work","visit","shipText","Draw","map","useLeaflet","useState","setIconsJson","id","useParams","useEffect","axios","get","then","res","data","icons","console","log","JSON","parse","smallClimateBlue","L","Icon","iconUrl","iconSize","iconAnchor","smallAccessibilityBlue","smallVibrancyBlue","smallCommunityBlue","smallEngagementBlue","newIcon","DrawToolbar","include","getModeHandlers","enabled","handler","Marker","icon","title","FeatureGroup","position","onEdited","e","layers","eachLayer","layer","properties","uid","latlng","getLatLng","updates","pointData","lat","lng","type","database","ref","update","editPoint","onCreated","panTo","popup","setLatLng","setContent","bindPopup","openPopup","onDeleted","deletePoint","draw","polyline","polygon","circle","rectangle","circlemarker","SideComment","props","comment","className","data-id","onClick","leafletElement","setView","setTimeout","filter","options","filterLayers","Object","values","_layers","alt","src","toUpperCase","commentBy","moment","submittedOn","fromNow","Sidepanel","collapsed","setCollapsed","selected","setSelected","comments","homeDescription","setHomeDescription","aboutDescription","setAboutDescription","header","document","getElementsByClassName","rgbValues","headerColor","style","backgroundColor","r","g","b","setStyleAndContentValues","onOpen","open","onClose","closeIcon","active","keys","length","key","hidden","points","Reply","content","admin","hideReply","commentId","replyId","PopupComment","replies","sortedReplies","forEach","push","sort","a","Date","isReplying","setReply","toggleReply","postReply","repliesDiv","target","previousSibling","scrollTop","scrollHeight","featured","reply","i","placeholder","hideComment","featureComment","Filter","Control","extend","onOff","handleOff","onAdd","_controlDiv","DomUtil","create","this","DomEvent","disableClickPropagation","onRemove","off","withLeaflet","assign","forceUpdate","getContainer","ReactDOM","createPortal","children","MapControl","Leaflet","baseMap","setBaseMap","user","climate","Point","accessibility","vibrancy","community","engagement","setMap","setPoints","setComments","setReplies","filterOpen","setFilter","setClimate","setAccessibility","setVibrancy","setCommunity","setEngagement","once","snapshot","val","auth","signInAnonymously","catch","error","code","message","Basemap","Default","prototype","_getIconUrl","mergeOptions","iconRetinaUrl","require","shadowUrl","onClickSaveButton","removeEventListener","disabled","getElementById","value","name","checked","email","Math","random","toString","substr","closePopup","toISOString","zoomSnap","includes","coords","commentData","upvote","on","markerClick","writePoint","onClickCancelButton","removeLayer","toggle","point","filterClick","filtered","dataset","newReply","sideComment","querySelector","scrollIntoView","Map","center","zoom","height","maxZoom","onlayeradd","cancelButtons","querySelectorAll","button","addEventListener","saveButtons","showMarker","showPopup","inputPlaceholder","providerOptions","region","LayersControl","BaseLayer","TileLayer","attribution","url","showCoverageOnHover","disableClusteringAtZoom","Popup","onMouseOver","onMouseLeave","onChange","htmlFor","Login","setEmail","pass","setPass","failed","authenticate","App","setUser","setFailed","onAuthStateChanged","exact","path","isAnonymous","password","signInWithEmailAndPassword","Boolean","window","location","hostname","match","render","StrictMode","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.729a08b5.chunk.js","sourcesContent":["// Firebase App (the core Firebase SDK) is always required and must be listed first\nimport * as firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firebase-database\";\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyCt0ewRsM4ltSTQ78gpnn7PZIUX52W31Lo\",\n  authDomain: \"medfordmap2.firebaseapp.com\",\n  databaseURL: \"https://medfordmap2-default-rtdb.firebaseio.com\",\n  projectId: \"medfordmap2\",\n  storageBucket: \"medfordmap2.appspot.com\",\n  messagingSenderId: \"1096097233102\",\n  appId: \"1:1096097233102:web:e871bf3eba187dcc9a789f\",\n  measurementId: \"G-RMQFL83NQR\"\n};\n\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\n\nexport default firebase;\n","import L from \"leaflet\";\n\nfunction getBoundary() {\n    return {\n        geometry: {\n            coordinates: [\n                [\n                    [-81.67318297236474, 41.49847051355391],\n                    [-81.67261247763194, 41.49835199633162],\n                    [-81.67246256660678, 41.49834575857702],\n                    [-81.67227934202127, 41.49835823408554],\n                    [-81.6684939085585, 41.49876807913711],\n                    [-81.66671569485732, 41.49896786021412],\n                    [-81.66423714097736, 41.49908358401191],\n                    [-81.65870596612154, 41.49968699849023],\n                    [-81.65341443251032, 41.50026843349664],\n                    [-81.65259996427812, 41.50036265951451],\n                    [-81.6517705727165, 41.50056620804435],\n                    [-81.64420307835398, 41.50056919715027],\n                    [-81.63949411364977, 41.50043782628725],\n                    [-81.63346322257908, 41.500122474412564],\n                    [-81.63354563772923, 41.506060448369055],\n                    [-81.63634787712361, 41.50607542286747],\n                    [-81.63954829116395, 41.5059589533187],\n                    [-81.64111730609254, 41.50600868837918],\n                    [-81.6444391176612, 41.506400748073645],\n                    [-81.64692835136722, 41.50669033511102],\n                    [-81.64811930583299, 41.506694005686455],\n                    [-81.64932781675982, 41.506530620786776],\n                    [-81.65037932146096, 41.50629439886197],\n                    [-81.65178789268597, 41.50615718113906],\n                    [-81.6518663497913, 41.508319318017385],\n                    [-81.65183702944665, 41.51228134755249],\n                    [-81.65184417986302, 41.51267461859416],\n                    [-81.65687788329815, 41.51124291054933],\n                    [-81.67100514120733, 41.507222045691805],\n                    [-81.67004655695524, 41.50419774011965],\n                    [-81.66983506864418, 41.50351442225221],\n                    [-81.66974807402732, 41.50312219297902],\n                    [-81.66973065285431, 41.50234502910877],\n                    [-81.66982792083456, 41.5016032328177],\n                    [-81.67021427839524, 41.500785530442414],\n                    [-81.67059904243396, 41.5002374497615],\n                    [-81.6712889402465, 41.499568671880354],\n                    [-81.67220185091811, 41.49894413557922],\n                    [-81.67265509428401, 41.498708442471326],\n                    [-81.67318297236474, 41.49847051355391],\n                ],\n            ],\n            type: \"Polygon\",\n        },\n        type: \"Feature\",\n        properties: {},\n    };\n}\n\nexport { getBoundary };\n\nfunction generateSampleData() {\n    const minLng = 41.4973;\n    const maxLng = 41.5119;\n    const minLat = -81.681;\n    const maxLat = -81.634;\n\n    let points = {};\n    let comments = {};\n    let replies = {};\n\n    const iconTypes = [\"climate\", \"accessibility\", \"vibrancy\", \"community\", \"engagement\"];\n    const bys = [\n        \"Jane Smith\",\n        \"Zoe Patel\",\n        \"Nick Jones\",\n        \"Eric Green\",\n        \"Trisha Stone\",\n        \"Anonymous\",\n    ];\n    const dates = [\n        \"2020-07-21T16:47:33\",\n        \"2020-07-24T16:47:33\",\n        \"2020-07-27T16:47:33\",\n        \"2020-07-25T16:47:33\",\n        \"2020-07-26T16:47:33\",\n        \"2020-07-28T16:47:33\",\n        \"2020-07-22T16:47:33\",\n    ];\n    const texts = [\n        \"Lorem in fugit neque\",\n        \"Lorem ipsum dolor sit amet.\",\n        \"Lorem ipsum dolor sit amet consectetur adipisicing elit. Optio, porro.\",\n        \"Lorem, ipsum dolor sit amet consectetur adipisicing elit. Doloribus placeat amet error?\",\n        \"Lorem ipsum dolor sit, amet consectetur adipisicing elit. Quis maiores omnis iste autem error voluptas voluptates fuga corrupti officiis excepturi nisi aliquid, doloribus qui.\",\n        \"Lorem ipsum dolor, sit amet consectetur adipisicing elit. Provident libero ab reiciendis nobis recusandae delectus quos hic nisi sunt ipsa voluptates eum tenetur dolorem facere eaque, nostrum excepturi deleniti saepe? Rerum.\",\n        \"Lorem ipsum dolor sit amet, consectetur adipisicing elit. Dolore, magnam odio! Veritatis alias voluptates quidem, totam quasi hic. Ea at sint ipsa, ut vitae voluptates esse voluptatem tempore labore dolores doloremque odit eius obcaecati ducimus placeat, nostrum aliquam quo quisquam quibusdam, officiis corrupti. Pariatur in, expedita quae eos sequi nisi!\",\n        \"Lorem ipsum dolor sit amet consectetur adipisicing elit. In fugit neque voluptates similique labore veritatis, laudantium architecto, incidunt assumenda iste suscipit? Quae, repudiandae exercitationem velit temporibus numquam debitis. Eum, doloremque? Delectus explicabo blanditiis quaerat at, nihil, fuga nostrum tempore distinctio, voluptate beatae tenetur odio aut provident illum est. Veniam maiores, dicta, non explicabo quaerat nobis sunt voluptates aliquid modi consequuntur dolores iure magni! Similique suscipit cum, veritatis voluptates aspernatur quo molestiae fuga ipsa aliquid illum rem aliquam iste quidem quae?\",\n    ];\n    const flip = [true, false];\n\n    for (let i = 0; i < 5; i++) {\n        const uid = \"_\" + Math.random().toString(36).substr(2, 9);\n        let iconType = iconTypes[Math.floor(Math.random() * iconTypes.length)];\n        points[uid] = {\n            lat: Math.random() * (maxLat - minLat) + minLat,\n            lng: Math.random() * (maxLng - minLng) + minLng,\n            type: iconType,\n        };\n\n        let featured = false;\n        if (i % 5 === 0) {\n            featured = true;\n        }\n\n        let text = texts[Math.floor(Math.random() * texts.length)];\n        let by = bys[Math.floor(Math.random() * bys.length)];\n        let date = dates[Math.floor(Math.random() * dates.length)];\n        let live = flip[Math.floor(Math.random() * flip.length)];\n        let work = flip[Math.floor(Math.random() * flip.length)];\n        let visit = flip[Math.floor(Math.random() * flip.length)];\n\n        comments[uid] = {\n            comment: text,\n            submittedOn: date,\n            commentBy: by,\n            neighboorhood: \"Northside\",\n            live: live,\n            work: work,\n            visit: visit,\n            hidden: false,\n            upvote: 0,\n            featured: featured,\n            type: iconType,\n        };\n\n        if (featured) {\n            replies[uid] = {\n                1: {\n                    comment: \"Saepe corporis eum voluptate.\",\n                    submittedOn: \"2020-07-23T11:11:11\",\n                    commentBy: bys[Math.floor(Math.random() * bys.length)],\n                    neighboorhood: \"Midtown\",\n                    live: flip[Math.floor(Math.random() * flip.length)],\n                    work: flip[Math.floor(Math.random() * flip.length)],\n                    visit: flip[Math.floor(Math.random() * flip.length)],\n                    hidden: false,\n                    upvote: -5,\n                },\n                2: {\n                    comment:\n                        \"Lorem ipsum dolor sit amet consectetur adipisicing elit. Tempore, aliquid voluptas consectetur sit amet repellendus sunt impedit perspiciatis est et sequi earum quas quo excepturi incidunt necessitatibus accusantium obcaecati at!\",\n                    submittedOn: \"2020-07-25T12:12:12\",\n                    commentBy: bys[Math.floor(Math.random() * bys.length)],\n                    neighboorhood: \"Midtown\",\n                    live: flip[Math.floor(Math.random() * flip.length)],\n                    work: flip[Math.floor(Math.random() * flip.length)],\n                    visit: flip[Math.floor(Math.random() * flip.length)],\n                    hidden: false,\n                    upvote: 15,\n                },\n            };\n        }\n    }\n\n    return { points: points, comments: comments, replies: replies };\n}\n\nexport { generateSampleData };\n\n// function uid() {\n//     // Convert it to base 36 (numbers + letters), and grab the first 9 characters after the decimal.\n//     return \"_\" + Math.random().toString(36).substr(2, 9);\n// }\n\nfunction getIcons() {\n    return {\n        climate: L.Icon.extend({\n            options: {\n                iconUrl: \"./assets/images/icons/climate.png\",\n                iconAnchor: new L.Point(38, 18),\n                iconSize: new L.Point(76, 76),\n            },\n        }),\n\n        accessibility: L.Icon.extend({\n            options: {\n                iconUrl: \"./icons/equity.png\",\n                iconAnchor: new L.Point(38, 18),\n                iconSize: new L.Point(75, 75),\n            },\n        }),\n        vibrancy: L.Icon.extend({\n            options: {\n                iconUrl: \"./icons/vibrancy.png\",\n                iconAnchor: new L.Point(38, 22),\n                iconSize: new L.Point(75, 75),\n            },\n        }),\n        community: L.Icon.extend({\n            options: {\n                iconUrl: \"./icons/community.png\",\n                iconAnchor: new L.Point(38, 22),\n                iconSize: new L.Point(75, 75),\n            },\n        }),\n        engagement: L.Icon.extend({\n            options: {\n                iconUrl: \"./icons/transparency.png\",\n                iconAnchor: new L.Point(38, 22),\n                iconSize: new L.Point(75, 75),\n            },\n        }),\n    };\n}\n\nexport { getIcons };\n\nfunction getRelationshipText(live, work, visit) {\n    let shipText = \"\";\n    if (live && work && visit) {\n        shipText = \"Lives in, works in, visits Medford\";\n    } else if (live && work && !visit) {\n        shipText = \"Lives and works in Medford\";\n    } else if (live && !work && visit) {\n        shipText = \"Lives in and visits Medford\";\n    } else if (!live && work && visit) {\n        shipText = \"Works in and visits Medford\";\n    } else if (live) {\n        shipText = \"Lives in Medford\";\n    } else if (work) {\n        shipText = \"Works in Medford\";\n    } else if (visit) {\n        shipText = \"Visits Medford\";\n    }\n    return shipText;\n}\n\nexport { getRelationshipText };\n","import React from \"react\";\nimport { FeatureGroup, useLeaflet } from \"react-leaflet\";\nimport L from \"leaflet\";\nimport { EditControl } from \"react-leaflet-draw\";\nimport firebase from \"../firebase.js\";\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { useParams } from \"react-router-dom\";\n\nimport \"./Draw.css\";\n\nconst Draw = () => {\n    const { map } = useLeaflet();\n    const [iconsJson, setIconsJson] = useState([]);\n\n    const { id } = useParams();\n\n    useEffect(() => {\n        axios.get(`https://dynamic-maps-backend.herokuapp.com/maps/list/${id}`).then(res => {\n            setIconsJson(`[${res.data.map.icons}]`);\n            console.log(JSON.parse(`[${res.data.map.icons}]`));\n        });\n    }, []);\n\n\n\n    // Hacky stuff below\n    var smallClimateBlue = new L.Icon({\n        iconUrl: \"./icons/transparency_user.png\",\n        iconSize: [75, 75],\n        iconAnchor: [38, 28],\n    });\n    var smallAccessibilityBlue = new L.Icon({\n        iconUrl: \"./icons/equity_user.png\",\n        iconSize: [75, 75],\n        iconAnchor: [38, 22],\n    });\n    var smallVibrancyBlue = new L.Icon({\n        iconUrl: \"./icons/vibrancy_user.png\",\n        iconSize: [75, 75],\n        iconAnchor: [38, 25],\n    });\n    var smallCommunityBlue = new L.Icon({\n        iconUrl: \"./icons/community_user.png\",\n        iconSize: [75, 75],\n        iconAnchor: [38, 25],\n    });\n    var smallEngagementBlue = new L.Icon({\n        iconUrl: \"./icons/engagement_user.png\",\n        iconSize: [75, 75],\n        iconAnchor: [38, 25],\n    });\n\n    var newIcon = new L.Icon({\n        iconUrl: \"/favicon.ico\",\n        iconSize: [75, 75],\n        iconAnchor: [38, 25],\n    });\n\n    L.DrawToolbar.include({\n        getModeHandlers: function (map) {\n            return [\n                {\n                    enabled: true,\n                    handler: new L.Draw.Marker(map, { icon: smallClimateBlue }),\n                    title: \"Add Climate Action\",\n                },\n                {\n                    enabled: true,\n                    handler: new L.Draw.Marker(map, { icon: smallAccessibilityBlue }),\n                    title: \"Add Accessibility Action\",\n                },\n                {\n                    enabled: true,\n                    handler: new L.Draw.Marker(map, { icon: smallVibrancyBlue }),\n                    title: \"Add Vibrancy Action\",\n                },\n                {\n                    enabled: true,\n                    handler: new L.Draw.Marker(map, { icon: smallCommunityBlue }),\n                    title: \"Add Community Action\",\n                },\n                {\n                    enabled: true,\n                    handler: new L.Draw.Marker(map, { icon: smallEngagementBlue }),\n                    title: \"Add Engagement Action\",\n                },\n                {\n                    enabled: true,\n                    handler: new L.Draw.Marker(map, { icon: newIcon }),\n                    title: \"Add Action\",\n                },\n                {\n                    enabled: true,\n                    handler: new L.Draw.Marker(map, { icon: newIcon }),\n                    title: \"Add Action\",\n                }\n            ];\n        },\n    });    \n\n    // ----\n    const deletePoint = (layer) => {\n        const uid = layer.properties.id;\n        console.log(uid);\n        var updates = {};\n        updates[\"/points/\" + uid] = null;\n        updates[\"/comments/\" + uid] = null;\n        firebase.database().ref().update(updates);\n    };\n    const editPoint = (layer) => {\n        const uid = layer.properties.id;\n        const latlng = layer.getLatLng();\n        var updates = {};\n\n        const pointData = {\n            lat: latlng.lng,\n            lng: latlng.lat,\n            type: layer.properties.type,\n        };\n\n        updates[\"/points/\" + uid] = pointData;\n        //updates[\"/comments/\" + uid] = null;\n        firebase.database().ref().update(updates);\n    };\n\n    const handleCreate = (e) => {\n        const layer = e.layer;\n        map.panTo(layer.getLatLng());\n\n        var popup = L.popup().setLatLng(layer.getLatLng()).setContent(\n            `<div class=\"newComment\">\n                    <h3 class=\"heading\">Comment</h3>\n                    <textarea id=\"commentText\" cols=\"60\" rows=\"5\"></textarea>\n\n                    <div class=\"popReason\">\n                        <label>What's your relationship to Medford?</label>\n                        <div class='checkGroup'>\n                            <input id='popLive' type='checkbox' />\n                            <label>I live here</label>\n                        </div>\n                        <div class='checkGroup'>\n                            <input id='popWork' type='checkbox' />\n                            <label>I work here</label>\n                        </div>\n                        <div class='checkGroup'>\n                            <input id='popVisit' type='checkbox' />\n                            <label>I visit</label>\n                        </div>\n                    </div>\n\n                    <div class=\"popName\">\n                        <label>Optional: Your Name</label>\n                        <input id='commentName' type='text'/>\n                    </div>\n\n                    <div class=\"popEmail\">\n                        <label>Optional: Your Email</label>\n                        <input id='commentEmail' type='email' placeholder='Your email'/>\n                    </div>\n                    \n                    <div class=\"popButtons\">\n                        <button class=\"popSave button--primary\">Post</button>\n                        <button class=\"popCancel button--secondary\">Cancel</button>\n                    </div>\n                </div>`\n        );\n\n        layer.bindPopup(popup).openPopup();\n        //layer.on(\"click\", centerAndZoomToPoint);\n    };\n\n    const handleEdit = (e) => {\n        const layers = e.layers;\n        layers.eachLayer(function (layer) {\n            if (layer.properties) {\n                editPoint(layer);\n            }\n        });\n    };\n    const handleDelete = (e) => {\n        var layers = e.layers;\n        layers.eachLayer(function (layer) {\n            if (layer.properties) {\n                deletePoint(layer);\n            }\n        });\n    };\n\n    return (\n        <FeatureGroup>\n            <EditControl\n                position=\"topleft\"\n                onEdited={handleEdit}\n                onCreated={handleCreate}\n                onDeleted={handleDelete}\n                draw={{\n                    polyline: false,\n                    polygon: false,\n                    circle: false,\n                    rectangle: false,\n                    circlemarker: false,\n                }}\n            />\n        </FeatureGroup>\n    );\n};\n\nexport default Draw;\n","import React from \"react\";\nimport moment from \"moment\";\nimport { getRelationshipText } from \"../helpers\";\n\nfunction SideComment(props) {\n    const comment = props.comment;\n    const map = props.map;\n    const latlng = props.latlng;\n\n    function filterLayers(layers, id) {\n        return layers.filter(function (layer) {\n            if (layer.options) {\n                return layer.options.id === id;\n            } else {\n                return false;\n            }\n        });\n    }\n\n    function commentClick() {\n        map.leafletElement.setView(latlng, 18);\n\n        setTimeout(() => {\n            const id = comment.id;\n\n            let layers = Object.values(map.leafletElement._layers);\n            let layer = filterLayers(layers, id);\n            layer = layer[0];\n\n            if (layer) {\n                map.leafletElement.setView(layer.getLatLng(), 18);\n                layer.openPopup();\n            }\n            map.leafletElement.setView(latlng, 18);\n        }, 300);\n    }\n\n    return (\n        <div\n            className=\"sideComment\"\n            data-id={comment.id}\n            onClick={commentClick}\n        >\n            <h3 className=\"commentType\">\n                <img\n                    className=\"icon\"\n                    alt=\"\"\n                    src={`/icons/${comment.type}.png`}\n                />\n                {comment &&\n                    comment.type === \"climate\" && comment.type.toUpperCase()}\n                {comment &&\n                    comment.type === \"accessibility\" && comment.type.toUpperCase()}\n                {comment &&\n                    comment.type === \"vibrancy\" && comment.type.toUpperCase()}\n                {comment &&\n                    comment.type === \"community\" && comment.type.toUpperCase()}\n                {comment &&\n                    comment.type === \"engagement\" && comment.type.toUpperCase()}\n            </h3>\n            <div className=\"comment\">\n                <h3 className=\"commentContent\">{comment.comment}</h3>\n                <p className=\"commentBy\">\n                    {\"by \"}\n                    {comment.commentBy}\n                </p>\n                <p className=\"commentDate\">\n                    {moment(comment.submittedOn).fromNow()}\n                </p>\n                <p className=\"commentAbout\">\n                    {getRelationshipText(\n                        comment.live,\n                        comment.work,\n                        comment.visit\n                    )}\n                </p>\n            </div>\n        </div>\n    );\n}\n\nexport default SideComment;\n","import React, { useState, Fragment } from \"react\";\nimport { Sidebar, Tab } from \"react-leaflet-sidebarv2\";\n\nimport SideComment from \"./SideComment\";\nimport \"./Sidepanel.css\";\n\nimport axios from \"axios\";\nimport { useEffect } from 'react';\nimport { useParams } from \"react-router-dom\";\n\nfunction Sidepanel(props) {\n    const [collapsed, setCollapsed] = useState(false);\n    const [selected, setSelected] = useState(\"home\");\n    const [language, setLanguage] = useState(\"English\");\n\n    let { id } = useParams();\n\n    let comments = props.comments;\n\n    const open = (id) => {\n        if (selected === id && collapsed === false) {\n            setCollapsed(true);\n        } else {\n            setCollapsed(false);\n            setSelected(id);\n        }\n    };\n\n\n    const [homeDescription, setHomeDescription] = useState(\"\");\n    const [aboutDescription, setAboutDescription] = useState(\"\");\n\n\n    const setStyleAndContentValues = (map) => {\n        let header = document.getElementsByClassName('sidebar-header');\n        const rgbValues = JSON.parse(map.headerColor);\n        header[0].style.backgroundColor = `rgb(${rgbValues.r}, ${rgbValues.g}, ${rgbValues.b})`;\n        header[1].style.backgroundColor = `rgb(${rgbValues.r}, ${rgbValues.g}, ${rgbValues.b})`;\n        header[2].style.backgroundColor = `rgb(${rgbValues.r}, ${rgbValues.g}, ${rgbValues.b})`;\n        setHomeDescription(map.homeDescription);\n        setAboutDescription(map.aboutDescription);\n    }\n\n    useEffect(() => {\n        console.log(id);\n        axios.get(`https://dynamic-maps-backend.herokuapp.com/maps/list/${id}`).then(res => {\n            console.log(res.data.map);\n            setStyleAndContentValues(res.data.map);\n        });\n    }, [])\n\n    return (\n        <Sidebar\n            id=\"sidebar\"\n            position=\"left\"\n            collapsed={collapsed}\n            selected={selected}\n            onOpen={(id) => open(id)}\n            onClose={() => setCollapsed(true)}\n            closeIcon={<img className=\"close\" alt=\"\" src=\"/icons/close.svg\" />}\n        >\n            <Tab\n                id=\"home\"\n                header=\"Home\"\n                icon={\n                    selected !== \"home\" ? (\n                        <img className=\"home\" alt=\"\" src=\"/icons/home.png\" />\n                    ) : (\n                        <img\n                            className=\"home\"\n                            alt=\"\"\n                            src=\"/icons/home_live.png\"\n                        />\n                    )\n                }\n                active\n            >\n\n                    <div>\n                         <p>\n                        <button\n                            className=\"spanish button--primary\"\n                        >\n                            en Español\n                        </button>\n                        </p>\n                        <p>{homeDescription}</p>\n\n                        {/* <div className=\"infoType\">\n                            <img className=\"textIcon\" src=\"/icons/climate.png\" alt=\"\" />\n                            <p>\n                                <b>Climate:</b> Use the{\" \"}\n                                <img\n                                    className=\"inTextIcon climate\"\n                                    src=\"/icons/tool_add_climate.png\"\n                                    alt=\"\"\n                                />{\" \"}\n                                to propose local climate ideas.\n                            </p>\n                        </div> */}\n                <p>\n                <button\n                    className=\"getStarted button--primary\"\n                    onClick={() => setCollapsed(true)}\n                >\n                    Get Started\n                </button>\n                </p>\n                </div>\n            </Tab>\n\n            <Tab\n                id=\"infoTab\"\n                header=\"About the Plan\"\n                icon={\n                    selected !== \"infoTab\" ? (\n                        <img\n                            className=\"info\"\n                            alt=\"\"\n                            src=\"/icons/new_info.png\"\n                        />\n                    ) : (\n                        <img\n                            className=\"info\"\n                            alt=\"\"\n                            src=\"/icons/info_live.png\"\n                        />\n                    )\n                }\n            >\n\n                    <div>\n                            <p>\n                            <button\n                                className=\"spanish button--primary\"\n                            >\n                                en Español\n                            </button>\n                        </p>\n                    <p>{aboutDescription}</p>\n                </div>\n            </Tab>\n\n            <Tab\n                id=\"commentsTab\"\n                header=\"Comments\"\n                icon={\n                    selected !== \"commentsTab\" ? (\n                        <img\n                            className=\"comments\"\n                            alt=\"\"\n                            src=\"/icons/side_comments.png\"\n                        />\n                    ) : (\n                        <img\n                            className=\"comments\"\n                            alt=\"\"\n                            src=\"/icons/comments_live.png\"\n                        />\n                    )\n                }\n            >\n                {comments &&\n                    Object.keys(comments).length > 0 &&\n                    Object.keys(comments).map((id) => (\n                        <Fragment key={id}>\n                            {!comments[id].hidden && (\n                                <SideComment\n                                    key={id}\n                                    comment={{ id: id, ...comments[id] }}\n                                    map={props.map}\n                                    latlng={{\n                                        lat: props.points[id].lng,\n                                        lng: props.points[id].lat,\n                                    }}\n                                ></SideComment>\n                            )}\n                        </Fragment>\n                    ))}\n            </Tab>\n        </Sidebar>\n    );\n}\n\nexport default Sidepanel;\n","import React, { Fragment } from \"react\";\nimport moment from \"moment\";\nimport { getRelationshipText } from \"../helpers\";\n\nfunction Reply(props) {\n    const content = props.content;\n    const admin = props.admin;\n    console.log(props);\n\n    return (\n        <Fragment>\n            {!content.hidden && (\n                <div className=\"replyPop\">\n                    <h3 className=\"commentContent\">{content.comment}</h3>\n                    <div className=\"replyDetails\">\n                        {admin && (\n                            <button\n                                className=\"hide button--admin\"\n                                onClick={() =>\n                                    props.hideReply(\n                                        props.commentId,\n                                        props.replyId\n                                    )\n                                }\n                            >\n                                Hide\n                            </button>\n                        )}\n                        <div className=\"replyByDetails\">\n                            <p className=\"commentBy\">\n                                {\"by \"}\n                                {content.commentBy || \"Anonymous\"}\n                                {\"  \"}\n                                {moment(content.submittedOn).fromNow()}\n                            </p>\n                            <p className=\"commentAbout\">\n                                {getRelationshipText(\n                                    content.live,\n                                    content.work,\n                                    content.visit\n                                )}\n                            </p>\n                        </div>\n                    </div>\n                </div>\n            )}\n        </Fragment>\n    );\n}\n\nexport default Reply;\n","import React, { useState, Fragment } from \"react\";\nimport moment from \"moment\";\nimport { getRelationshipText } from \"../helpers\";\n\nimport Reply from \"./Reply\";\n\nfunction PopupComment(props) {\n    const admin = props.admin;\n    const comment = props.comment;\n    const replies = props.replies;\n\n    let sortedReplies = [];\n    if (replies) {\n        Object.keys(replies).forEach((key) => {\n            replies[key].key = key;\n            sortedReplies.push(replies[key]);\n        });\n\n        sortedReplies = sortedReplies.sort(function (a, b) {\n            return Date.parse(a.submittedOn) - Date.parse(b.submittedOn);\n        });\n    }\n\n    const [isReplying, setReply] = useState(false);\n\n    const toggleReply = (e) => {\n        if (isReplying) {\n            props.postReply(e);\n\n            const repliesDiv = e.target.previousSibling.previousSibling;\n            repliesDiv.scrollTop = repliesDiv.scrollHeight;\n        }\n        setReply(!isReplying);\n    };\n\n    return (\n        <div className=\"comment\">\n            <p className=\"commentType\"><b>{comment.type.toUpperCase()}:</b></p>\n            <h3 className=\"commentContent\">{comment.comment}</h3>\n            <p className=\"commentBy\">\n                {\"by \"}\n                {comment.commentBy}\n            </p>\n            <p className=\"commentDate\">\n                {moment(comment.submittedOn).fromNow()}\n            </p>\n            <p className=\"commentAbout\">\n                {getRelationshipText(comment.live, comment.work, comment.visit)}\n            </p>\n\n            <div className=\"postedReplies\">\n                {comment.featured &&\n                    replies &&\n                    sortedReplies.map((reply, i) => (\n                        <Reply\n                            key={i}\n                            replyId={reply.key}\n                            commentId={props.id}\n                            admin={admin}\n                            hideReply={props.hideReply}\n                            content={{\n                                ...reply,\n                            }}\n                        />\n                    ))}\n            </div>\n            {comment.featured && (\n                <Fragment>\n                    {isReplying && (\n                        <Fragment>\n                            <div className=\"replyControls\">\n                                \n                                <textarea\n                                    id=\"replyText\"\n                                    className=\"replyText\"\n                                    placeholder=\"Your reply\"\n                                ></textarea>\n                                \n                                <div className=\"replyReason\">\n                                    <label>\n                                        What's your relationship to Medford?\n                                    </label>\n                                    <div className=\"replyChecks\">\n                                        <div className=\"checkGroup\">\n                                            <input\n                                                id=\"replyLive\"\n                                                type=\"checkbox\"\n                                            />\n                                            <label>Live</label>\n                                        </div>\n                                        <div className=\"checkGroup\">\n                                            <input\n                                                id=\"replyWork\"\n                                                type=\"checkbox\"\n                                            />\n                                            <label>Work</label>\n                                        </div>\n                                        <div className=\"checkGroup\">\n                                            <input\n                                                id=\"replyVisit\"\n                                                type=\"checkbox\"\n                                            />\n                                            <label>Visit</label>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"replyName\">\n                                    <label>What's your name? (optional)</label>\n                                    <input id=\"replyName\" type=\"text\" />\n                                </div>\n                            </div>\n                            <button\n                                className=\"postReply button--primary\"\n                                data-id={props.id}\n                                onClick={(e) => toggleReply(e)}\n                            >\n                                Post Reply\n                            </button>\n                            <button\n                                className=\"replyCancel\"\n                                onClick={() => setReply(false)}\n                            >\n                                Cancel\n                            </button>\n                        </Fragment>\n                    )}\n                    {!isReplying && (\n                        <button\n                            className=\"postReply button--primary\"\n                            data-id={props.id}\n                            onClick={toggleReply}\n                        >\n                            Reply\n                        </button>\n                    )}\n                </Fragment>\n            )}\n            {admin && (\n                <div className=\"admin\">\n                    <button\n                        className=\"hide button--admin\"\n                        onClick={() => props.hideComment(props.id)}\n                    >\n                        {comment.hidden ? \"Unhide\" : \"Hide\"}\n                    </button>\n                    <button\n                        className=\"feature button--admin\"\n                        onClick={() => props.featureComment(props.id)}\n                    >\n                        {comment.featured ? \"Unfeature\" : \"Feature\"}\n                    </button>\n                </div>\n            )}\n        </div>\n    );\n}\n\nexport default PopupComment;\n","import ReactDOM from \"react-dom\";\nimport { MapControl, withLeaflet } from \"react-leaflet\";\nimport { Control, DomUtil, DomEvent } from \"leaflet\";\nimport \"./Filter.css\";\n\nconst Filter = Control.extend({\n    options: {\n        className: \"\",\n        onOff: \"\",\n        handleOff: function noop() {},\n    },\n\n    onAdd(/* map */) {\n        var _controlDiv = DomUtil.create(\"div\", this.options.className);\n        DomEvent.disableClickPropagation(_controlDiv);\n        return _controlDiv;\n    },\n\n    onRemove(map) {\n        if (this.options.onOff) {\n            map.off(this.options.onOff, this.options.handleOff, this);\n        }\n\n        return this;\n    },\n});\n\nexport default withLeaflet(\n    class LeafletControl extends MapControl {\n        createLeafletElement(props) {\n            return new Filter(Object.assign({}, props));\n        }\n\n        componentDidMount() {\n            super.componentDidMount();\n\n            // This is needed because the control is only attached to the map in\n            // MapControl's componentDidMount, so the container is not available\n            // until this is called. We need to now force a render so that the\n            // portal and children are actually rendered.\n            this.forceUpdate();\n        }\n\n        render() {\n            if (!this.leafletElement || !this.leafletElement.getContainer()) {\n                return null;\n            }\n            return ReactDOM.createPortal(\n                this.props.children,\n                this.leafletElement.getContainer()\n            );\n        }\n    }\n);\n","import React, { useState, useEffect, Fragment } from \"react\";\nimport firebase from \"../firebase.js\";\nimport {\n    Map,\n    TileLayer,\n    LayersControl,\n    Marker,\n    Popup,\n} from \"react-leaflet\";\nimport Search from \"react-leaflet-search\";\nimport MarkerClusterGroup from \"react-leaflet-markercluster\";\nimport L from \"leaflet\";\nimport moment from \"moment\";\n\nimport {\n    getIcons,\n    getRelationshipText,\n} from \"../helpers\";\nimport Draw from \"./Draw\";\nimport Sidepanel from \"./Sidepanel\";\nimport PopupComment from \"./PopupComment\";\nimport Filter from \"./Filter\";\nimport \"./Leaflet.css\";\n\nimport { useParams } from 'react-router-dom';\nimport axios from \"axios\";\n\nfunction Leaflet(props) {\n\n    \n    const [baseMap, setBaseMap] = useState(\"\");\n    const [iconsJson, setIconsJson] = useState(\"\");\n    const { id } = useParams();\n    useEffect(() => {\n        axios.get(`https://dynamic-maps-backend.herokuapp.com/maps/list/${id}`).then(res => {\n            setBaseMap(res.data.map.baseMap);\n            setIconsJson(res.data.map.icons);\n        });\n    }, [])\n\n    const user = props.user;\n    const admin = props.admin;\n    const icons = getIcons();\n    const position = [42.424930, -71.128840];\n    const mapStyle = { height: \"100vh\" };\n    const [map, setMap] = useState({});\n    const [points, setPoints] = useState({});\n    const [comments, setComments] = useState({});\n    const [replies, setReplies] = useState({});\n    const [filterOpen, setFilter] = useState(false);\n    const [climate, setClimate] = useState(true);\n    const [accessibility, setAccessibility] = useState(true);\n    const [vibrancy, setVibrancy] = useState(true);\n    const [community, setCommunity] = useState(true);\n    const [engagement, setEngagement] = useState(true);\n\n    const saveData = (firebase) => {\n        firebase.database().ref(\"points\").set(points);\n        firebase.database().ref(\"comments\").set(comments);\n        firebase.database().ref(\"replies\").set(replies);\n    };\n\n    useEffect(() => {\n        if (!user) {\n            firebase\n                .auth()\n                .signInAnonymously()\n                .then(() => {\n                    firebase\n                        .database()\n                        .ref(\"points\")\n                        .once(\"value\")\n                        .then(function (snapshot) {\n                            setPoints(snapshot.val());\n                        });\n\n                    firebase\n                        .database()\n                        .ref(\"comments\")\n                        .once(\"value\")\n                        .then(function (snapshot) {\n                            setComments(snapshot.val());\n                        });\n\n                    firebase\n                        .database()\n                        .ref(\"replies\")\n                        .once(\"value\")\n                        .then(function (snapshot) {\n                            setReplies(snapshot.val());\n                        });\n                })\n                .catch(function (error) {\n                    // Handle Errors here.\n                    var errorCode = error.code;\n                    var errorMessage = error.message;\n                    // ...\n                });\n        } else {\n            firebase\n                .database()\n                .ref(\"points\")\n                .once(\"value\")\n                .then(function (snapshot) {\n                    setPoints(snapshot.val());\n                });\n\n            firebase\n                .database()\n                .ref(\"comments\")\n                .once(\"value\")\n                .then(function (snapshot) {\n                    setComments(snapshot.val());\n                });\n\n            firebase\n                .database()\n                .ref(\"replies\")\n                .once(\"value\")\n                .then(function (snapshot) {\n                    setReplies(snapshot.val());\n                });\n        }\n\n        // setPoints({ ...data.points });\n        // setComments({ ...data.comments });\n        // setReplies({ ...data.replies });\n    }, [firebase]);\n\n    //const mapboxSat =\n    //    \"https://api.mapbox.com/styles/v1/interfacestudio/ckke4pj2z0njj17o5nwco65f5/tiles/{z}/{x}/{y}?access_token=pk.eyJ1IjoiaW50ZXJmYWNlc3R1ZGlvIiwiYSI6ImNqeDNiank1djA4ZGE0OXJ3Nmw5dTEyNWgifQ.YIDGNNi8jg51LdgBOFCkbA\";\n\n    const mapboxSat =\n          \"https://api.mapbox.com/styles/v1/mapbox/satellite-v9.html?title=true&access_token=pk.eyJ1IjoibWFwYm94IiwiYSI6ImNpejY4NDg1bDA1cjYzM280NHJ5NzlvNDMifQ.d6e-nNyBDtmQCVwVNivz7A#3/0/0\";\n    const Basemap = baseMap;\n\n    delete L.Icon.Default.prototype._getIconUrl;\n\n    L.Icon.Default.mergeOptions({\n        iconRetinaUrl: require(\"leaflet/dist/images/marker-icon-2x.png\"),\n        iconUrl: require(\"leaflet/dist/images/marker-icon.png\"),\n        shadowUrl: require(\"leaflet/dist/images/marker-shadow.png\"),\n    });\n\n    const layerAdd = (e) => {\n        const cancelButtons = document.querySelectorAll(\".popCancel\");\n        if (cancelButtons) {\n            cancelButtons.forEach(function (button) {\n                button.addEventListener(\"click\", onClickCancelButton);\n            });\n        }\n\n        const saveButtons = document.querySelectorAll(\".popSave\");\n        if (saveButtons) {\n            saveButtons.forEach(function (button) {\n                button.addEventListener(\"click\", onClickSaveButton);\n            });\n        }\n    };\n\n    const onClickSaveButton = function handler(e) {\n        e.target.removeEventListener(\"click\", handler);\n\n        e.target.disabled = true;\n        const keys = Object.keys(map.leafletElement._layers);\n        const layer =\n            map.leafletElement._layers[keys[keys.length - 2]];\n\n        const comment = document.getElementById(\"commentText\")\n            .value;\n        let name = document.getElementById(\"commentName\").value;\n        if (name === \"\") {\n            name = \"Anonymous\";\n        }\n        /*const neighboorhood = document.getElementById(\"commentHood\")\n            .value;*/\n        const live = document.getElementById(\"popLive\").checked;\n        const work = document.getElementById(\"popWork\").checked;\n        const visit = document.getElementById(\"popVisit\").checked;\n        const email = document.getElementById(\"commentEmail\").value;\n\n        layer.properties = {};\n        const id = \"_\" + Math.random().toString(36).substr(2, 9);\n        layer.properties.id = id;\n\n        layer.properties.comment = comment;\n        layer.properties.name = name;\n        layer.properties.email = email;\n        /*layer.properties.neighboorhood = neighboorhood;*/\n        layer.properties.work = work;\n        layer.properties.visit = visit;\n        layer.properties.live = live;\n\n        layer.options.id = id;\n\n        map.leafletElement.closePopup();\n\n        let shipText = getRelationshipText(live, work, visit);\n\n        const popup = L.popup()\n            .setLatLng(layer.getLatLng())\n            .setContent(\n                `<div class=\"comment\">\n                <h3 class=\"commentContent\">` +\n                    layer.properties.comment +\n                    `</h3>\n                <p class=\"commentBy\">\n                    by ` +\n                    layer.properties.name +\n                    `</p>\n                <p class=\"commentDate\">` +\n                    moment(new Date().toISOString()).fromNow() +\n                    `</p>\n                <p class=\"commentAbout\">` +\n                    shipText +\n                    `</p>\n                </div>`\n            );\n\n        layer.bindPopup(popup);\n        layer.openPopup();\n        L.zoomSnap = 0;\n        let icon = layer.options.icon.options.iconUrl;\n        if (icon.includes(\"climate\")) {\n            icon = \"climate\";\n        } else if (icon.includes(\"accessibility\")) {\n            icon = \"accessibility\";\n        } else if (icon.includes(\"vibrancy\")) {\n            icon = \"vibrancy\";\n        } else if (icon.includes(\"community\")) {\n            icon = \"community\";\n        } else {\n            icon = \"engagement\";\n        }\n        layer.properties.type = icon;\n\n        const coords = layer.getLatLng();\n        const pointData = {\n            lat: coords.lng,\n            lng: coords.lat,\n            type: icon,\n        };\n        if (points) {\n            points[layer.properties.id] = pointData;\n        }\n        //let update = { ...points };\n        //setPoints(update);\n\n        const commentData = {\n            comment: comment,\n            commentBy: name,\n            featured: true,\n            hidden: false,\n            work: work,\n            live: live,\n            visit: visit,\n            submittedOn: new Date().toISOString(),\n            upvote: 0,\n            type: icon,\n            email: email,\n        };\n        if (comments) {\n            comments[layer.properties.id] = commentData;\n        }\n        // let update = { ...comments };\n        // setComments(update);\n\n        layer.on(\"click\", () => markerClick(id));\n\n        writePoint(layer.properties.id, pointData, commentData);\n    }\n    const onClickCancelButton = (e) => {\n        map.leafletElement.closePopup();\n\n        const keys = Object.keys(map.leafletElement._layers);\n        let layer =\n            map.leafletElement._layers[keys[keys.length - 1]];\n        map.leafletElement.removeLayer(layer);\n    }\n    const hideComment = (id) => {\n        const toggle = comments[id].hidden;\n\n        points[id].hidden = !toggle;\n        let update = { ...points };\n        setPoints(update);\n        comments[id].hidden = !toggle;\n        update = { ...comments };\n        setComments(update);\n\n        // write to firebase\n        var updates = {};\n        updates[\"/comments/\" + id + \"/\"] = comments[id];\n        updates[\"/points/\" + id + \"/\"] = points[id];\n        firebase.database().ref().update(updates);\n    };\n    const featureComment = (id) => {\n        const toggle = comments[id].featured;\n        comments[id].featured = !toggle;\n        const update = { ...comments };\n        setComments(update);\n\n        // write to firebase\n        var updates = {};\n        updates[\"/comments/\" + id + \"/\"] = comments[id];\n        firebase.database().ref().update(updates);\n    };\n    const hideReply = (id, replyId) => {\n        const toggle = replies[id][replyId].hidden;\n        replies[id][replyId].hidden = !toggle;\n        const update = { ...replies };\n        setReplies(update);\n\n        // write to firebase\n        var updates = {};\n        updates[\"/replies/\" + id + \"/\" + replyId] = replies[id][replyId];\n        firebase.database().ref().update(updates);\n    };\n\n    const writePoint = (uid, point, comment) => {\n        var updates = {};\n        updates[\"/points/\" + uid] = point;\n        updates[\"/comments/\" + uid] = comment;\n        firebase.database().ref().update(updates);\n    };\n\n    const filterClick = (type, active) => {\n        if (type === \"climate\") {\n            setClimate(!active);\n        } else if (type === \"accessibility\") {\n            setAccessibility(!active);\n        } else if (type === \"vibrancy\") {\n            setVibrancy(!active);\n        } else if (type === \"community\") {\n            setCommunity(!active);\n        } else {\n            setEngagement(!active);\n        }\n\n        Object.keys(points).map((key) => {\n            if (points[key].type === type) {\n                points[key].filtered = active;\n            }\n        });\n\n        const update = { ...points };\n        setPoints(update);\n    };\n\n    const postReply = (e) => {\n        // post reply\n        const id = e.target.dataset.id;\n        const comment = document.getElementById(\"replyText\").value;\n        let name = document.getElementById(\"replyName\").value;\n        if (name === \"\") {\n            name = \"Anonymous\";\n        }\n        const live = document.getElementById(\"replyLive\").checked;\n        const work = document.getElementById(\"replyWork\").checked;\n        const visit = document.getElementById(\"replyVisit\").checked;\n\n        const newReply = {\n            comment: comment,\n            submittedOn: new Date().toISOString(),\n            commentBy: name,\n            live: live,\n            work: work,\n            visit: visit,\n            hidden: false,\n            upvote: 0,\n        };\n\n        //update state\n        const replyId = \"_\" + Math.random().toString(36).substr(2, 9);\n        if (!replies[id]) {\n            replies[id] = {};\n        }\n        replies[id][replyId] = newReply;\n        const update = { ...replies };\n        setReplies(update);\n\n        // write to firebase\n        var updates = {};\n        updates[\"/replies/\" + id + \"/\" + replyId] = newReply;\n        firebase.database().ref().update(updates);\n    };\n\n    const markerClick = (id) => {\n        const sideComment = document.querySelector(\"[data-id=\" + id + \"]\");\n        if (sideComment != null) {\n            sideComment.scrollIntoView();\n        }\n    };\n    return (\n        <Fragment>\n            <div id=\"map-div\">\n                <Sidepanel comments={comments} points={points} map={map} id={id} />\n                <Map\n                    ref={(ref) => {\n                        setMap(ref);\n                    }}\n                    className=\"sidebar-map\"\n                    id=\"leaflet-map\"\n                    center={position}\n                    zoom={13.5}\n                    style={mapStyle}\n                    maxZoom={20}\n                    onlayeradd={layerAdd}\n                >\n                    <Search\n                        position=\"topright\"\n                        showMarker={true}\n                        showPopup={false}\n                        inputPlaceholder=\"Search for a location\"\n                        zoom={13} // Default value is 10\n                        providerOptions={{ region: \"us\" }}\n                    />\n                    <LayersControl position=\"bottomright\">\n                        <LayersControl.BaseLayer name=\"Streets\" checked>\n                            <TileLayer\n                                attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> &copy; <a href=\"https://www.mapbox.com/about/maps/\">Mapbox</a> map by <a href=\"https://www.landau.design\">LANDAU</a> + <a href=\"http://interface-studio.com/\">Interface Studio</a>'\n                                url={Basemap}\n                            />\n                        </LayersControl.BaseLayer>\n                        <LayersControl.BaseLayer name=\"Satellite\">\n                            <TileLayer\n                                attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> &copy; <a href=\"https://www.mapbox.com/about/maps/\">Mapbox</a> map by <a href=\"https://www.landau.design\">LANDAU</a> + <a href=\"http://interface-studio.com/\">Interface Studio</a>'\n                                url={Basemap}\n                            />\n                        </LayersControl.BaseLayer>\n                        \n                    </LayersControl>\n                    <Draw />\n\n                    {/* <GeoJSON\n                        data={boundary}\n                        style={{\n                            color: \"#f26422\",\n                            fillColor: \"none\",\n                            weight: 1,\n                            // dashArray: \"20 10\",\n                        }}\n                    /> */}\n\n                    <MarkerClusterGroup showCoverageOnHover={false} disableClusteringAtZoom={18} >\n                        {points &&\n                            Object.keys(points).length > 0 &&\n                            Object.keys(points).map(\n                                (id) =>\n                                    !points[id].filtered &&\n                                    !points[id].hidden && (\n                                        <Marker\n                                            key={id}\n                                            id={id}\n                                            position={[\n                                                points[id].lng,\n                                                points[id].lat,\n                                            ]}\n                                            icon={new icons[points[id].type]()}\n                                            onClick={() => markerClick(id)}\n                                        >\n                                            {comments[id] && (\n                                                <Popup\n                                                    id={id}\n                                                    featured={\n                                                        comments[id].featured\n                                                    }\n                                                    reply={false}\n                                                >\n                                                    <PopupComment\n                                                        admin={admin}\n                                                        comment={comments[id]}\n                                                        replies={replies[id]}\n                                                        id={id}\n                                                        postReply={postReply}\n                                                        hideComment={\n                                                            hideComment\n                                                        }\n                                                        featureComment={\n                                                            featureComment\n                                                        }\n                                                        hideReply={hideReply}\n                                                    />\n                                                </Popup>\n                                            )}\n                                        </Marker>\n                                    )\n                            )}\n                    </MarkerClusterGroup>\n\n                    <Filter className=\"filter\" position=\"topleft\">\n                        {!filterOpen && (\n                            <button\n                                className=\"filter\"\n                                onClick={() => setFilter(true)}\n                                onMouseOver={() => setFilter(true)}\n                            >\n                                <img alt=\"\" src=\"/icons/new_filter.png\"></img>\n                            </button>\n                        )}\n                        {filterOpen && (\n                            <div\n                                className=\"filterList\"\n                                onMouseLeave={() => setFilter(false)}\n                                //onBlur={() => setFilter(false)}\n                            >\n                                <div className=\"filterGroup\">\n                                    <input\n                                        type=\"checkbox\"\n                                        name=\"climate\"\n                                        id=\"filterClimate\"\n                                        checked={climate}\n                                        onChange={() =>\n                                            filterClick(\"climate\", climate)\n                                        }\n                                    />\n                                    <label htmlFor=\"climate\">Climate</label>\n                                </div>\n                                <div className=\"filterGroup\">\n                                    <input\n                                        type=\"checkbox\"\n                                        name=\"accessibility\"\n                                        id=\"filterAccessibility\"\n                                        checked={accessibility}\n                                        onChange={() =>\n                                            filterClick(\"accessibility\", accessibility)\n                                        }\n                                    />\n                                    <label htmlFor=\"accessibility\">Accessibility</label>\n                                </div>\n                                <div className=\"filterGroup\">\n                                    <input\n                                        type=\"checkbox\"\n                                        name=\"vibrancy\"\n                                        id=\"filterVibrancy\"\n                                        checked={vibrancy}\n                                        onChange={() =>\n                                            filterClick(\"vibrancy\", vibrancy)\n                                        }\n                                    />\n                                    <label htmlFor=\"vibrancy\">Vibrancy</label>\n                                </div>\n                                <div className=\"filterGroup\">\n                                    <input\n                                        type=\"checkbox\"\n                                        name=\"community\"\n                                        id=\"filterCommunity\"\n                                        checked={community}\n                                        onChange={() =>\n                                            filterClick(\"community\", community)\n                                        }\n                                    />\n                                    <label htmlFor=\"community\">Community</label>\n                                </div>\n                                <div className=\"filterGroup\">\n                                    <input\n                                        type=\"checkbox\"\n                                        name=\"engagement\"\n                                        id=\"filterEngagement\"\n                                        checked={engagement}\n                                        onChange={() =>\n                                            filterClick(\"engagement\", engagement)\n                                        }\n                                    />\n                                    <label htmlFor=\"engagement\">Engagement</label>\n                                </div>\n                            </div>\n                        )}\n                    </Filter>\n                </Map>\n            </div>\n        </Fragment>\n    );\n}\n\nexport default Leaflet;\n","import React, { useState } from \"react\";\nimport \"./Login.css\";\n\nfunction Login(props) {\n    const [email, setEmail] = useState(\"\");\n    const [pass, setPass] = useState(\"\");\n\n    return (\n        <div id=\"login\">\n            <div className=\"loginCard\">\n                <h2>Login</h2>\n                <p>Sign in to manage the map.</p>\n                {props.failed && (\n                    <div className=\"alert\">Invalid email or password</div>\n                )}\n                <input\n                    type=\"email\"\n                    className=\"email\"\n                    placeholder=\"Email\"\n                    onChange={(e) => setEmail(e.target.value)}\n                />\n                <input\n                    type=\"password\"\n                    className=\"pass\"\n                    placeholder=\"Password\"\n                    onChange={(e) => setPass(e.target.value)}\n                />\n                <button\n                    className=\"login button--primary\"\n                    onClick={() => props.authenticate(email, pass)}\n                >\n                    Log In\n                </button>\n            </div>\n        </div>\n    );\n}\n\nexport default Login;\n","import React, { useState } from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport firebase from \"./firebase\";\nimport \"leaflet/dist/leaflet.css\";\nimport \"./App.css\";\nimport Leaflet from \"./components/Leaflet\";\nimport Login from \"./components/Login\";\n\nfunction App() {\n    const [user, setUser] = useState(\"\");\n    const [failed, setFailed] = useState(false);\n\n    firebase.auth().onAuthStateChanged(function (user) {\n        if (user) {\n            setUser(user);\n        }\n    });\n\n    function authenticate(email, password) {\n        firebase\n            .auth()\n            .signInWithEmailAndPassword(email, password)\n            .catch(function (error) {\n                setFailed(true);\n                // Handle Errors here.\n                var errorCode = error.code;\n                var errorMessage = error.message;\n                // some display for bad logins...\n            });\n    }\n\n    return (\n        <Router>\n            <Route exact path=\"/:id\">\n                <Leaflet />\n            </Route>\n            <Route path=\"/admin\">\n                {!user.isAnonymous ? (\n                    <Leaflet admin user={user} />\n                ) : (\n                    <Login authenticate={authenticate} failed={failed} />\n                )}\n            </Route>\n        </Router>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport \"../node_modules/leaflet-draw/dist/leaflet.draw.css\";\nimport \"../node_modules/sidebar-v2/css/leaflet-sidebar.min.css\";\nimport \"../node_modules/react-leaflet-markercluster/dist/styles.min.css\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}